map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream web {
    server web:8080;
}

server {
    listen 80;
    port_in_redirect off;
    autoindex on;
    client_max_body_size 100m;

    location / {

        # Pass request to the upstream alias
        if (!-f $request_filename) {
            proxy_pass http://web;
            break;
        }

        # Require http version 1.1 to allow for upgrade requests
        proxy_http_version 1.1;

        # We want proxy_buffering off for proxying to websockets.
        proxy_buffering off;

        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # enable this if you use HTTPS:
        # proxy_set_header X-Forwarded-Proto https;
        # pass the Host: header from the client for the sake of redirects
        proxy_set_header Host $http_host;

        # We've set the Host header, so we don't need Nginx to muddle
        # about with redirects
        proxy_redirect off;

        # Depending on the request value, set the Upgrade and
        # connection headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # proxy_read_timeout  36000s;
        keepalive_timeout 604800;
        proxy_connect_timeout 604800;
        proxy_send_timeout 604800;
        proxy_read_timeout 604800;

        # add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

    }
}